name: drivetools

services:
  nginx:
    container_name: 'nginx'
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/templates/nginx.conf.template
      - /etc/letsencrypt/ssl-dhparams.pem:/etc/letsencrypt/ssl-dhparams.pem
      - /etc/letsencrypt/options-ssl-nginx.conf:/etc/letsencrypt/options-ssl-nginx.conf
      - /etc/letsencrypt/live/${DOMAIN}/fullchain.pem:/etc/letsencrypt/live/${DOMAIN}/fullchain.pem
      - /etc/letsencrypt/live/${DOMAIN}/privkey.pem:/etc/letsencrypt/live/${DOMAIN}/privkey.pem
    networks:
      - external-network
    environment:
      NGINX_ENVSUBST_OUTPUT_DIR: /etc/nginx
      DOMAIN: ${DOMAIN}
      CLIENT_DOMAIN: ${CLIENT_DOMAIN}
      CLIENT_PORT: ${CLIENT_PORT}

  client:
    container_name: ${CLIENT_DOMAIN}
    build:
      context: ./client
      dockerfile: ../docker/Dockerfile.client.light
      args:
        - CLIENT_ID=${VITE_CLIENT_ID}
    restart: always
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"
    networks:
      - external-network
    environment:
      CLIENT_DOMAIN: ${CLIENT_DOMAIN}
      CLIENT_PORT: ${CLIENT_PORT}
      VITE_CLIENT_ID: ${VITE_CLIENT_ID}

  database:
    container_name: ${DATABASE_DOMAIN}
    image: postgres:11
    restart: always
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    volumes:
      - database:/var/lib/postgresql/data
      - ./postgres/initpg.sh:/docker-entrypoint-initdb.d/initpg.sh
    networks:
      - secure-network
    environment:
      DATABASE_DOMAIN: ${DATABASE_DOMAIN}
      DATABASE_PORT: ${DATABASE_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  # client:
  #   container_name: ${CLIENT_DOMAIN}
  #   build:
  #     context: ../${REPO_NAME_BASE}.${CLIENT_DOMAIN}
  #     dockerfile: ../${REPO_NAME_BASE}.production/docker/Dockerfile.client
  #     args:
  #       - VITE_CLIENT_ID=${VITE_CLIENT_ID}
  #   ports:
  #     - "${CLIENT_PORT}:${CLIENT_PORT}"
  #   restart: always
  #   networks:
  #     - external-network
  #   environment:
  #     REPO_NAME_BASE: ${REPO_NAME_BASE}
  #     CLIENT_DOMAIN: ${CLIENT_DOMAIN}
  #     CLIENT_PORT: ${CLIENT_PORT}
  #     VITE_CLIENT_ID: ${VITE_CLIENT_ID}

volumes:
  database:

networks:
  external-network:
    driver: bridge
  secure-network:
    driver: bridge
